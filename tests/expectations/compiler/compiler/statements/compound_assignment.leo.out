---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 10
      num_constraints: 10
      at: 059df7a9f33d273d72d4cdd66c40f343577291eeff60c2130f493092e113cbd5
      bt: 33357b08e1eae5a3cb450b7aa066201d3f3715cc4c8422edc89e1306aa69e05c
      ct: 4d417efac51835eb0795550275c95bc7001c6e50f0c37e7ff381af198cfb7a8a
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, 10"
      - "  add &v4, v3, 20"
      - "  store &v3, v4"
      - "  store &v5, 3"
      - "  add &v6, v5, v3"
      - "  store &v5, v6"
      - "  store &v7, [1, 2, 3, 4]"
      - "  aget &v8, v7, 0"
      - "  add &v9, v8, 3"
      - "  aget &v10, v7, 0"
      - "  aset &v7, 0, v9"
      - "  store &v7, v7"
      - "  asget &v11, v7, 0, 3, 3"
      - "  aget &v12, v11, 1"
      - "  mul &v13, v12, 3"
      - "  asget &v14, v7, 0, 3, 3"
      - "  aget &v15, v14, 1"
      - "  aset &v14, 1, v13"
      - "  asset &v7, 0, 3, v14"
      - "  store &v7, v7"
      - "  store &v16, (1, 2)"
      - "  tget &v17, v16, 1"
      - "  add &v18, v17, 3"
      - "  tget &v19, v16, 1"
      - "  tset &v16, 1, v18"
      - "  store &v16, v16"
      - "  store &v20, (6, (1, 1))"
      - "  tget &v21, v20, 0"
      - "  add &v22, v21, 2"
      - "  tget &v23, v20, 0"
      - "  tset &v20, 0, v22"
      - "  store &v20, v20"
      - "  store &v24, 2"
      - "  add &v25, v24, 21"
      - "  store &v24, v25"
      - "  store &v26, [[0], [0], [0], [0]]"
      - "  aget &v27, v26, 2"
      - "  aget &v28, v27, 0"
      - "  add &v29, v28, 1"
      - "  aget &v30, v26, 2"
      - "  aget &v31, v30, 0"
      - "  aset &v30, 0, v29"
      - "  aset &v26, 2, v30"
      - "  store &v26, v26"
      - "  store &v32, [[0], [0], [0], [0]]"
      - "  aget &v33, v32, 2"
      - "  aget &v34, v33, 0"
      - "  add &v35, v34, 1"
      - "  aget &v36, v32, 2"
      - "  aget &v37, v36, 0"
      - "  aset &v36, 0, v35"
      - "  aset &v32, 2, v36"
      - "  store &v32, v32"
      - "  eq &v38, v3, 30"
      - "  eq &v39, v5, 33"
      - "  and &v40, v38, v39"
      - "  aget &v41, v7, 0"
      - "  eq &v42, v41, 4"
      - "  and &v43, v40, v42"
      - "  aget &v44, v7, 1"
      - "  eq &v45, v44, 6"
      - "  and &v46, v43, v45"
      - "  tget &v47, v16, 1"
      - "  eq &v48, v47, 5"
      - "  and &v49, v46, v48"
      - "  tget &v50, v20, 0"
      - "  eq &v51, v50, 8"
      - "  and &v52, v49, v51"
      - "  aget &v53, v26, 2"
      - "  aget &v54, v53, 0"
      - "  eq &v55, v54, 1"
      - "  and &v56, v52, v55"
      - "  aget &v57, v26, 2"
      - "  aget &v58, v57, 0"
      - "  eq &v59, v58, 1"
      - "  and &v60, v56, v59"
      - "  and &v61, v60, v2"
      - "  retn v61"
      - "decl f1: <62>"
      - "  tget &v63, v62, 1"
      - "  tget &v64, v63, 0"
      - "  add &v65, v64, 1"
      - "  tget &v66, v62, 1"
      - "  tget &v67, v66, 0"
      - "  tset &v66, 0, v65"
      - "  tset &v62, 1, v66"
      - "  store &v62, v62"
      - "  retn (v62, 1)"
      - "decl f2: <68>"
      - "decl f3: <69>"
      - "decl f4: <70>"
      - "decl f5: <71>"
      - "decl f6: <72>"
      - "decl f7: <73>"
      - "decl f8: <74>"
      - "decl f9: <75>"
      - "decl f10: <76>"
      - "decl f11: <77>"
      - "decl f12: <78>"
      - "decl f13: <79>"
      - "decl f14: <80>"
      - "decl f15: <81>"
      - "decl f16: <82>"
      - "decl f17: <83>"
      - "decl f18: <84>"
      - "decl f19: <85>"
      - "decl f20: <86>"
      - "decl f21: <87>"
      - "decl f22: <88>"
      - "decl f23: <89>"
      - "decl f24: <90>"
      - "decl f25: <91>"
      - "decl f26: <92>"
      - "decl f27: <93>"
      - "decl f28: <94>"
      - "decl f29: <95>"
      - "decl f30: <96>"
      - "decl f31: <97>"
      - "decl f32: <98>"
      - "decl f33: <99>"
      - "decl f34: <100>"
      - "decl f35: <101>"
      - "decl f36: <102>"
      - "decl f37: <103>"
      - "decl f38: <104>"
      - "decl f39: <105>"
      - "decl f40: <106>"
      - "decl f41: <107>"
      - "decl f42: <108>"
      - "decl f43: <109>"
      - "decl f44: <110>"
      - "decl f45: <111>"
      - "decl f46: <112>"
      - "decl f47: <113>"
      - "decl f48: <114>"
      - "decl f49: <115>"
      - "decl f50: <116>"
      - "decl f51: <117>"
      - "decl f52: <118>"
      - "decl f53: <119>"
      - "decl f54: <120>"
      - "decl f55: <121>"
      - "decl f56: <122>"
      - "decl f57: <123>"
      - "decl f58: <124>"
      - "decl f59: <125>"
      - "decl f60: <126>"
      - "decl f61: <127>"
      - "decl f62: <128>"
      - "decl f63: <129>"
      - "decl f64: <130>"
      - "decl f65: <131>"
      - "decl f66: <132>"
      - "decl f67: <133>"
      - "decl f68: <134>"
      - "decl f69: <135>"
      - "decl f70: <136>"
      - "decl f71: <137>"
      - "decl f72: <138>"
      - "decl f73: <139>"
      - "decl f74: <140>"
      - "decl f75: <141>"
      - "decl f76: <142>"
      - "decl f77: <143>"
      - "decl f78: <144>"
      - "decl f79: <145>"
      - "decl f80: <146>"
      - "decl f81: <147>"
      - "decl f82: <148>"
      - "decl f83: <149>"
      - "decl f84: <150>"
      - "decl f85: <151>"
      - "decl f86: <152>"
      - "decl f87: <153>"
      - "decl f88: <154>"
      - "decl f89: <155>"
      - "decl f90: <156>"
      - "decl f91: <157>"
      - "decl f92: <158>"
      - "decl f93: <159>"
      - "decl f94: <160>"
      - "decl f95: <161>"
      - "decl f96: <162>"
      - "decl f97: <163>"
      - "decl f98: <164>"
      - "decl f99: <165>"
      - "decl f100: <166>"
      - "decl f101: <167>"
      - "decl f102: <168>"
      - "decl f103: <169>"
      - "decl f104: <170>"
      - "decl f105: <171>"
      - "decl f106: <172>"
      - "decl f107: <173>"
      - "decl f108: <174>"
      - "decl f109: <175>"
      - "decl f110: <176>"
      - "decl f111: <177>"
      - "decl f112: <178>"
      - "decl f113: <179>"
      - "decl f114: <180>"
      - "decl f115: <181>"
      - "decl f116: <182>"
      - "decl f117: <183>"
      - "decl f118: <184>"
      - "decl f119: <185>"
      - "decl f120: <186>"
      - "decl f121: <187>"
      - "decl f122: <188>"
      - ""
    output:
      - input_file: inputs/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: cfe26c94f79b89add1a49063e45790a5d30e6f29b0bc2064c64620b4ce3b32d7
    imports_resolved_ast: c5c9b9fac32c8c28b1606169d118d02fdf7fecc62d29ab3f3ad4af1c87b1ba52
    canonicalized_ast: 789b9f53c6cc09e61596e2f91191809078df428c2a3e964d1ddd8e6fc0ec5281
    type_inferenced_ast: 36f93e9ce71219d75bc0a59dc95e7622c8061a20a805a125c04432b237329386
