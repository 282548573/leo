---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1851
      num_constraints: 2308
      at: 6a5f8a1c8d41b7e759d1259a686595b6397c4a4b5a8e655f62e637db21ca7909
      bt: 9a02f9052eb091bfced9221fda8900f1a0d1249b30bcc4b9e841d2defc978bc3
      ct: 3300eecdc155247c334e5290e13cf9906b58cbc1c2984cd7d623372f1fbe4e50
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, [1, 2, 3]"
      - "  sub &v4, v2, 1"
      - "  aget &v5, v3, v4"
      - "  aget &v6, v3, v2"
      - "  add &v7, v5, v6"
      - "  sub &v8, v2, 1"
      - "  aget &v9, v3, v8"
      - "  aset &v3, v8, v7"
      - "  store &v3, v3"
      - "  aget &v10, v3, v2"
      - "  aset &v3, v2, 0"
      - "  store &v3, v3"
      - "  retn v3"
      - "decl f1: <11>"
      - "decl f2: <12>"
      - "decl f3: <13>"
      - "decl f4: <14>"
      - "decl f5: <15>"
      - "decl f6: <16>"
      - "decl f7: <17>"
      - "decl f8: <18>"
      - "decl f9: <19>"
      - "decl f10: <20>"
      - "decl f11: <21>"
      - "decl f12: <22>"
      - "decl f13: <23>"
      - "decl f14: <24>"
      - "decl f15: <25>"
      - "decl f16: <26>"
      - "decl f17: <27>"
      - "decl f18: <28>"
      - "decl f19: <29>"
      - "decl f20: <30>"
      - "decl f21: <31>"
      - "decl f22: <32>"
      - "decl f23: <33>"
      - "decl f24: <34>"
      - "decl f25: <35>"
      - "decl f26: <36>"
      - "decl f27: <37>"
      - "decl f28: <38>"
      - "decl f29: <39>"
      - "decl f30: <40>"
      - "decl f31: <41>"
      - "decl f32: <42>"
      - "decl f33: <43>"
      - "decl f34: <44>"
      - "decl f35: <45>"
      - "decl f36: <46>"
      - "decl f37: <47>"
      - "decl f38: <48>"
      - "decl f39: <49>"
      - "decl f40: <50>"
      - "decl f41: <51>"
      - "decl f42: <52>"
      - "decl f43: <53>"
      - "decl f44: <54>"
      - "decl f45: <55>"
      - "decl f46: <56>"
      - "decl f47: <57>"
      - "decl f48: <58>"
      - "decl f49: <59>"
      - "decl f50: <60>"
      - "decl f51: <61>"
      - "decl f52: <62>"
      - "decl f53: <63>"
      - "decl f54: <64>"
      - "decl f55: <65>"
      - "decl f56: <66>"
      - "decl f57: <67>"
      - "decl f58: <68>"
      - "decl f59: <69>"
      - "decl f60: <70>"
      - "decl f61: <71>"
      - "decl f62: <72>"
      - "decl f63: <73>"
      - "decl f64: <74>"
      - "decl f65: <75>"
      - "decl f66: <76>"
      - "decl f67: <77>"
      - "decl f68: <78>"
      - "decl f69: <79>"
      - "decl f70: <80>"
      - "decl f71: <81>"
      - "decl f72: <82>"
      - "decl f73: <83>"
      - "decl f74: <84>"
      - "decl f75: <85>"
      - "decl f76: <86>"
      - "decl f77: <87>"
      - "decl f78: <88>"
      - "decl f79: <89>"
      - "decl f80: <90>"
      - "decl f81: <91>"
      - "decl f82: <92>"
      - "decl f83: <93>"
      - "decl f84: <94>"
      - "decl f85: <95>"
      - "decl f86: <96>"
      - "decl f87: <97>"
      - "decl f88: <98>"
      - "decl f89: <99>"
      - "decl f90: <100>"
      - "decl f91: <101>"
      - "decl f92: <102>"
      - "decl f93: <103>"
      - "decl f94: <104>"
      - "decl f95: <105>"
      - "decl f96: <106>"
      - "decl f97: <107>"
      - "decl f98: <108>"
      - "decl f99: <109>"
      - "decl f100: <110>"
      - "decl f101: <111>"
      - "decl f102: <112>"
      - "decl f103: <113>"
      - "decl f104: <114>"
      - "decl f105: <115>"
      - "decl f106: <116>"
      - "decl f107: <117>"
      - "decl f108: <118>"
      - "decl f109: <119>"
      - "decl f110: <120>"
      - "decl f111: <121>"
      - "decl f112: <122>"
      - "decl f113: <123>"
      - "decl f114: <124>"
      - "decl f115: <125>"
      - "decl f116: <126>"
      - "decl f117: <127>"
      - "decl f118: <128>"
      - "decl f119: <129>"
      - "decl f120: <130>"
      - "decl f121: <131>"
      - ""
    output:
      - input_file: input/index1.in
        output:
          registers:
            r0:
              type: "[u32; 3]"
              value: "[3, 0, 3]"
      - input_file: input/index2.in
        output:
          registers:
            r0:
              type: "[u32; 3]"
              value: "[1, 5, 0]"
    initial_ast: eeb86b2c087ca9833623212ccda533a3005df2d731c659f2bb96928c6faef038
    imports_resolved_ast: 28d95e318d6210ff1bc242618d8b8962c9542c9f769b75844b00f75b1220c97c
    canonicalized_ast: b8da45b1d9ed6cd5753e058dee6467920a892bb39aa7ed88578d29940ed115eb
    type_inferenced_ast: c211b1bbff812891b002750f43d97cfef17734f57c9827cf8ca201857e221076
