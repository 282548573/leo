---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1914
      num_constraints: 2558
      at: 4736445d494d9b9a754b2eb5c91df5310290d0954417b5a89918f2bf1f4ae134
      bt: 36a24962d91c3492840ab49513db6874c8e617cf8d1b985f756cd54843dac885
      ct: 0132d343b82fee719c3af5146f4417ae3fa7c285f1b5e2aebe9ce2e4505cc336
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, [(1, 1), (2, 2), (3, 3)]"
      - "  aget &v4, v3, v2"
      - "  tget &v5, v4, 0"
      - "  tset &v4, 0, 0"
      - "  aset &v3, v2, v4"
      - "  store &v3, v3"
      - "  aget &v6, v3, v2"
      - "  tget &v7, v6, 1"
      - "  tset &v6, 1, 1"
      - "  aset &v3, v2, v6"
      - "  store &v3, v3"
      - "  retn v3"
      - "decl f1: <8>"
      - "decl f2: <9>"
      - "decl f3: <10>"
      - "decl f4: <11>"
      - "decl f5: <12>"
      - "decl f6: <13>"
      - "decl f7: <14>"
      - "decl f8: <15>"
      - "decl f9: <16>"
      - "decl f10: <17>"
      - "decl f11: <18>"
      - "decl f12: <19>"
      - "decl f13: <20>"
      - "decl f14: <21>"
      - "decl f15: <22>"
      - "decl f16: <23>"
      - "decl f17: <24>"
      - "decl f18: <25>"
      - "decl f19: <26>"
      - "decl f20: <27>"
      - "decl f21: <28>"
      - "decl f22: <29>"
      - "decl f23: <30>"
      - "decl f24: <31>"
      - "decl f25: <32>"
      - "decl f26: <33>"
      - "decl f27: <34>"
      - "decl f28: <35>"
      - "decl f29: <36>"
      - "decl f30: <37>"
      - "decl f31: <38>"
      - "decl f32: <39>"
      - "decl f33: <40>"
      - "decl f34: <41>"
      - "decl f35: <42>"
      - "decl f36: <43>"
      - "decl f37: <44>"
      - "decl f38: <45>"
      - "decl f39: <46>"
      - "decl f40: <47>"
      - "decl f41: <48>"
      - "decl f42: <49>"
      - "decl f43: <50>"
      - "decl f44: <51>"
      - "decl f45: <52>"
      - "decl f46: <53>"
      - "decl f47: <54>"
      - "decl f48: <55>"
      - "decl f49: <56>"
      - "decl f50: <57>"
      - "decl f51: <58>"
      - "decl f52: <59>"
      - "decl f53: <60>"
      - "decl f54: <61>"
      - "decl f55: <62>"
      - "decl f56: <63>"
      - "decl f57: <64>"
      - "decl f58: <65>"
      - "decl f59: <66>"
      - "decl f60: <67>"
      - "decl f61: <68>"
      - "decl f62: <69>"
      - "decl f63: <70>"
      - "decl f64: <71>"
      - "decl f65: <72>"
      - "decl f66: <73>"
      - "decl f67: <74>"
      - "decl f68: <75>"
      - "decl f69: <76>"
      - "decl f70: <77>"
      - "decl f71: <78>"
      - "decl f72: <79>"
      - "decl f73: <80>"
      - "decl f74: <81>"
      - "decl f75: <82>"
      - "decl f76: <83>"
      - "decl f77: <84>"
      - "decl f78: <85>"
      - "decl f79: <86>"
      - "decl f80: <87>"
      - "decl f81: <88>"
      - "decl f82: <89>"
      - "decl f83: <90>"
      - "decl f84: <91>"
      - "decl f85: <92>"
      - "decl f86: <93>"
      - "decl f87: <94>"
      - "decl f88: <95>"
      - "decl f89: <96>"
      - "decl f90: <97>"
      - "decl f91: <98>"
      - "decl f92: <99>"
      - "decl f93: <100>"
      - "decl f94: <101>"
      - "decl f95: <102>"
      - "decl f96: <103>"
      - "decl f97: <104>"
      - "decl f98: <105>"
      - "decl f99: <106>"
      - "decl f100: <107>"
      - "decl f101: <108>"
      - "decl f102: <109>"
      - "decl f103: <110>"
      - "decl f104: <111>"
      - "decl f105: <112>"
      - "decl f106: <113>"
      - "decl f107: <114>"
      - "decl f108: <115>"
      - "decl f109: <116>"
      - "decl f110: <117>"
      - "decl f111: <118>"
      - "decl f112: <119>"
      - "decl f113: <120>"
      - "decl f114: <121>"
      - "decl f115: <122>"
      - "decl f116: <123>"
      - "decl f117: <124>"
      - "decl f118: <125>"
      - "decl f119: <126>"
      - "decl f120: <127>"
      - "decl f121: <128>"
      - ""
    output:
      - input_file: input/index1_tuple.in
        output:
          registers:
            r0:
              type: "[(u32, u32); 3]"
              value: "[(1, 1), (0, 1), (3, 3)]"
      - input_file: input/index2_tuple.in
        output:
          registers:
            r0:
              type: "[(u32, u32); 3]"
              value: "[(1, 1), (2, 2), (0, 1)]"
    initial_ast: b1ccd7999e7188e7db141a9f1c13ac95f93fa5079d4aaa240f012f78776d11f3
    imports_resolved_ast: ef8501f5726707414d537f8d9e2202e3599315d7f9f875cebab8ac74641f33e6
    canonicalized_ast: ef8501f5726707414d537f8d9e2202e3599315d7f9f875cebab8ac74641f33e6
    type_inferenced_ast: eafc4676bdefedd110884f5d9a4039773ccac370779fe2fed488c42f998870ef
