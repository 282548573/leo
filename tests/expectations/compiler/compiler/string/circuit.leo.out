---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 154
      num_constraints: 115
      at: c73182736b41504922ffbd5684468cdc3e5eac32e6f6e504077d46615504a444
      bt: b91aeecc2605d68d469659981f84ffd9f4e89e60715cf5109f9e3dc7b4c30275
      ct: 6d7a8caa60742927fd906c039c34fdb6d81855ecd060fa6c0643d7f8434f26b9
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, (v2)"
      - "  call &v4, f1, v2"
      - "  store &v5, v4"
      - "  tget &v6, v3, 0"
      - "  eq &v7, v6, ['H', 'e', 'l', 'l', 'o', ',', ' ', 'W', 'o', 'r', 'l', 'd', '!']"
      - "  pick &v8, v7, v2, ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n']"
      - "  store &v9, v8"
      - "  retn v9"
      - "decl f1: <10>"
      - "  eq &v11, v10, ['H', 'e', 'l', 'l', 'o', ',', ' ', 'W', 'o', 'r', 'l', 'd', '!']"
      - "  retn v11"
      - "decl f2: <12>"
      - "decl f3: <13>"
      - "decl f4: <14>"
      - "decl f5: <15>"
      - "decl f6: <16>"
      - "decl f7: <17>"
      - "decl f8: <18>"
      - "decl f9: <19>"
      - "decl f10: <20>"
      - "decl f11: <21>"
      - "decl f12: <22>"
      - "decl f13: <23>"
      - "decl f14: <24>"
      - "decl f15: <25>"
      - "decl f16: <26>"
      - "decl f17: <27>"
      - "decl f18: <28>"
      - "decl f19: <29>"
      - "decl f20: <30>"
      - "decl f21: <31>"
      - "decl f22: <32>"
      - "decl f23: <33>"
      - "decl f24: <34>"
      - "decl f25: <35>"
      - "decl f26: <36>"
      - "decl f27: <37>"
      - "decl f28: <38>"
      - "decl f29: <39>"
      - "decl f30: <40>"
      - "decl f31: <41>"
      - "decl f32: <42>"
      - "decl f33: <43>"
      - "decl f34: <44>"
      - "decl f35: <45>"
      - "decl f36: <46>"
      - "decl f37: <47>"
      - "decl f38: <48>"
      - "decl f39: <49>"
      - "decl f40: <50>"
      - "decl f41: <51>"
      - "decl f42: <52>"
      - "decl f43: <53>"
      - "decl f44: <54>"
      - "decl f45: <55>"
      - "decl f46: <56>"
      - "decl f47: <57>"
      - "decl f48: <58>"
      - "decl f49: <59>"
      - "decl f50: <60>"
      - "decl f51: <61>"
      - "decl f52: <62>"
      - "decl f53: <63>"
      - "decl f54: <64>"
      - "decl f55: <65>"
      - "decl f56: <66>"
      - "decl f57: <67>"
      - "decl f58: <68>"
      - "decl f59: <69>"
      - "decl f60: <70>"
      - "decl f61: <71>"
      - "decl f62: <72>"
      - "decl f63: <73>"
      - "decl f64: <74>"
      - "decl f65: <75>"
      - "decl f66: <76>"
      - "decl f67: <77>"
      - "decl f68: <78>"
      - "decl f69: <79>"
      - "decl f70: <80>"
      - "decl f71: <81>"
      - "decl f72: <82>"
      - "decl f73: <83>"
      - "decl f74: <84>"
      - "decl f75: <85>"
      - "decl f76: <86>"
      - "decl f77: <87>"
      - "decl f78: <88>"
      - "decl f79: <89>"
      - "decl f80: <90>"
      - "decl f81: <91>"
      - "decl f82: <92>"
      - "decl f83: <93>"
      - "decl f84: <94>"
      - "decl f85: <95>"
      - "decl f86: <96>"
      - "decl f87: <97>"
      - "decl f88: <98>"
      - "decl f89: <99>"
      - "decl f90: <100>"
      - "decl f91: <101>"
      - "decl f92: <102>"
      - "decl f93: <103>"
      - "decl f94: <104>"
      - "decl f95: <105>"
      - "decl f96: <106>"
      - "decl f97: <107>"
      - "decl f98: <108>"
      - "decl f99: <109>"
      - "decl f100: <110>"
      - "decl f101: <111>"
      - "decl f102: <112>"
      - "decl f103: <113>"
      - "decl f104: <114>"
      - "decl f105: <115>"
      - "decl f106: <116>"
      - "decl f107: <117>"
      - "decl f108: <118>"
      - "decl f109: <119>"
      - "decl f110: <120>"
      - "decl f111: <121>"
      - "decl f112: <122>"
      - "decl f113: <123>"
      - "decl f114: <124>"
      - "decl f115: <125>"
      - "decl f116: <126>"
      - "decl f117: <127>"
      - "decl f118: <128>"
      - "decl f119: <129>"
      - "decl f120: <130>"
      - "decl f121: <131>"
      - "decl f122: <132>"
      - ""
    output:
      - input_file: inputs/string_out.in
        output:
          registers:
            out:
              type: "[char; 13]"
              value: "Hello, World!"
    initial_ast: 041d491135929df77cab0ad3ceadaad8ca9566650423326ea4850cae5915f842
    imports_resolved_ast: 8d514308c7ca40c50bcba7db44ddd9f725e82bad8fb02093716bfde667832439
    canonicalized_ast: e2468bf40f5370f403e2d3e323eeb4c0fb3eccc738f483483a81448062ccd9b7
    type_inferenced_ast: 6d49590da436d1552577b5ff5afa1edc1881c91097c76e4fdbfb9f70d45516db
